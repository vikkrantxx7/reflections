What happens when you initialize a repository? Why do you need to do it?
	Empty git repository is created. To track changes in the project folder.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	Files before commiting goes to staging area so that we can choose which all
	files to commit. We can remove files from staging. When we have all our files
	to staging area then one commit will snapshot them.

How can you use the staging area to make sure you have one commit per logical
change?
	We can add our file to staging several times. Once we know that the logical
	change is complete we can commit. This way we will not commit multiple times.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	*When there is a need to checkout for an experimental feature.
	*When we need to fix some bug.
	*When someone else is collaborating.

How do the diagrams help you visualize the branch structure?
	It gave the clear understanging of the reachability and git log output.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	There will be a new commit called merge commit and the Head of the checked-out 
	branch will move to this commit. The log will show all the commits from both 
	branches in sorted order of time they were created. Functionality will merge.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	Pros - If there is no conflict it is automatic.
	Cons - If there is conflict first it has to be resolved manually. Then merged.
